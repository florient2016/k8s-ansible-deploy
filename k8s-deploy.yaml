# K8s Deploy Playbook
# This Ansible playbook sets up an Ansible user and installs Kubernetes prerequisites on RHEL9.
# It performs the following tasks:
# 1. Updates all packages to the latest version.
# 2. Ensures the Ansible user exists with a specified password and adds the user to the 'wheel' group.
# 3. Adds the Ansible user to the sudoers file with no password requirement for sudo commands.
# 4. Adds the Kubernetes repository to the system.
# 5. Installs required Kubernetes packages (kubelet, kubeadm, kubectl, docker).
# 6. Enables and starts the Docker service.
# 7. Disables SELinux.
# 8. Disables swap and ensures it remains disabled on boot.
# 9. Enables net.bridge.bridge-nf-call-iptables and net.ipv4.ip_forward sysctl parameters.
---
- name: Setup Ansible user and install Kubernetes prerequisites on RHEL9
  hosts: all
  become: yes

  vars:
    ansible_user: ansible
    ansible_password: "{{ 'ansible' | password_hash('sha512') }}"
    k8s_packages:
      - kubelet
      - kubeadm
      - kubectl
    required_packages:
      - docker-ce 
      - containerd.io 
      - docker-buildx-plugin
      - docker-compose-plugin
      - yum-utils
      - curl
      - wget
      - device-mapper-persistent-data
      - lvm2

  tasks:
  # Update all packages
    - name: Update all packages
      ansible.builtin.yum:
        name: '*'
        state: latest

    - name: uninstall podman-docker
      ansible.builtin.yum:
        name: podman-docker
        state: absent
        
    - name: Install dnf-plugins-core
      ansible.builtin.yum:
        name: dnf-plugins-core
        state: present

    - name: Add Docker repo
      ansible.builtin.shell: |
        dnf config-manager --add-repo https://download.docker.com/linux/rhel/docker-ce.repo

    - name: Ensure Ansible user exists with password
      ansible.builtin.user:
        name: "{{ ansible_user }}"
        password: "{{ ansible_password }}"
        state: present
        groups: wheel
        append: yes

    
    - name: Add Ansible user to sudoers
      ansible.builtin.lineinfile:
        path: /etc/sudoers
        state: present
        regexp: '^%wheel'
        line: '%wheel ALL=(ALL) NOPASSWD: ALL'
        validate: 'visudo -cf %s'

    - name: Add Kubernetes repository
      ansible.builtin.yum_repository:
        name: kubernetes
        description: Kubernetes Repository
        baseurl: https://pkgs.k8s.io/core:/stable:/v1.32/rpm/
        gpgcheck: yes
        repo_gpgcheck: yes
        gpgkey: https://pkgs.k8s.io/core:/stable:/v1.32/rpm/repodata/repomd.xml.key
        enabled: yes

    - name: Install required packages
      ansible.builtin.yum:
        name: "{{ item }}"
        state: present
      loop: "{{ required_packages }}"

    - name: Enable and start Docker service
      ansible.builtin.systemd:
        name: docker
        enabled: yes
        state: started

    - name: Disable swap
      ansible.builtin.command: swapoff -a
      when: ansible_swaptotal_mb > 0

    - name: Ensure swap is disabled on boot
      ansible.builtin.lineinfile:
        path: /etc/fstab
        regexp: '^\s*([^#\s]+\s+){2}swap\s'
        state: absent

    - name: Enable net.bridge.bridge-nf-call-iptables
      ansible.posix.sysctl:
        name: net.bridge.bridge-nf-call-iptables
        value: 1
        state: present
        reload: yes

    - name: Enable net.ipv4.ip_forward
      ansible.posix.sysctl:
        name: net.ipv4.ip_forward
        value: 1
        state: present
        reload: yes

    - name: Install required packages
      ansible.builtin.yum:
        name: "{{ item }}"
        state: present
        disable_excludes: kubernetes
      loop: "{{ k8s_packages }}"